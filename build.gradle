buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
    }
}

group "org.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-plugin-publish"
apply plugin:"org.grails.grails-gsp"

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    provided 'org.springframework.boot:spring-boot-starter-logging'
    provided "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-autoconfigure"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    provided "org.grails:grails-web-boot"
    provided "org.grails.plugins:hibernate"
    provided "org.grails:grails-dependencies"
    profile "org.grails.profiles:web-plugin:3.1.8"
    provided "org.hibernate:hibernate-ehcache"
    testCompile "org.grails:grails-plugin-testing"

    console "org.grails:grails-console"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}
grailsPublish {
    githubSlug = 'gpc/taggable'
    license {
        name = 'Apache-2.0'
    }
    title = "Taggable Plugin"
    desc = "Grails Taggable Plugin"
    developers = [graemerocher: "Graeme Rocher"]
}
jar {
    exclude "grails/plugins/taggable/Test*"
}

/*
 * http://ryanharter.com/blog/2013/07/30/automatic-versioning-with-git-and-gradle/
 * Gets the version name from the latest Git tag
 */
version = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}()

publishing {
    repositories {
        maven {
            credentials {
                username artifactory_user
                password artifactory_password
            }
            url artifactory_contextUrl
        }
    }
}